{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","i","TodoAdd","handleAddTodo","initialState","useState","Values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7afabce.chunk.js","sourcesContent":["\r\n\r\nexport const todoReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n        case 'toggle-old':\r\n            return state.map(todo => {\r\n                if (todo.id === action.payload) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n            });\r\n            \r\n        case 'toggle':\r\n            return state.map(todo =>\r\n                (todo.id === action.payload)\r\n                    ? { ...todo, done: !todo.done }\r\n                    : todo\r\n                      );\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n    return (\r\n        <li\r\n            key={todo.id}\r\n            className='list-group-item'\r\n        >\r\n            <p\r\n                className={`${todo.done && 'complete'}`}\r\n                onClick={() => handleToggle(todo.id)}\r\n            >\r\n                {index + 1}. {todo.desc}\r\n            </p>\r\n            <button\r\n                className='btn btn-danger'\r\n                onClick={() => handleDelete(todo.id)}\r\n            >\r\n                Borrar\r\n                                </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({ todo, handleDelete, handleToggle }) => {\r\n    return (\r\n\r\n        <ul className='list-group list-group-flush'>\r\n            {\r\n                todo.map((todo, i) => (\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        index={i}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n   \r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: '',\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n        handleAddTodo (newTodo);\r\n        reset();\r\n    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO</h4>\r\n            <hr />\r\n            <form onSubmit={handleSubmit} >\r\n                <input\r\n                    type='text'\r\n                    name='description'\r\n                    className='form-control'\r\n                    placeholder='Aprender...'\r\n                    autoComplete='off'\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-outline-primary mt-1 btn-block ' >\r\n                    Agregar\r\n                        </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [Values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...Values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [ Values, handleInputChange, reset];\r\n\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\nimport './styles.css'\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todo')) || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todo, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('todo', JSON.stringify(todo));\r\n    }, [todo]);\r\n\r\n    const handleDelete = (todoId) => {\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n        dispatch(action);\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n    }\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>TodoApp ( {todo.length} )</h1>\r\n            <hr />\r\n\r\n            <div className='row'>\r\n                <div className='col-7'>\r\n                    <TodoList\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                        todo={todo}\r\n                    />\r\n\r\n                </div>\r\n                <div className='col-5'>\r\n                    <TodoAdd\r\n                        handleAddTodo={ handleAddTodo }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { FormWhitCustomHook } from './components/02-useEffect/FormWhitCustomHook';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// import { Layouts } from './components/05-useLayoutEffect/Layout';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterWhitCustomHook } from './components/01-useState/CounterWhitCustomHook';\n// import { Simpleform } from './components/02-useEffect/Simpleform';\n// import { HookApp } from './HookApp';\n\n\nReactDOM.render(\n\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n// import './components/08-useReducer/intro-reducer';\n"],"sourceRoot":""}